#!/usr/bin/env bash
## Depends on the following ENV Vars being defined
# $SERVICE_GIT_URL  - the url of the git repo associated with the service
# $ORDERS_NAME      - the name of the servie being deployed, i.e. 'auth'
# $ORDERS_FILE      - Path to the orders file that contains env vars to be set

SCRIPTPATH="$( cd "$(dirname "$0")" ; pwd -P )"

# Runtime not needed as part of buildpack, since it is included in lambda
# We use a node cli to deploy, it is installed in ./heroku directory.
# This prevents deployment since files are in use with in the dir being deployed.
# Therefore remove ./heroku directory
rm -rf $1/.heroku

# install nvm, npm, node 6.5.0 
echo "" && echo "Install Node ---- "

# install nvm
# because script is run with sudo nvm is put in /root/.nvm making node unavailable to othe envs
# therefore, we move nvm to /home/.nvm and mak it executable
export NVM_DIR="$HOME/.nvm"
if [ ! -s "$NVM_DIR/nvm.sh" ]; then
    curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.31.0/install.sh | bash
fi 


if [ -s "$NVM_DIR/nvm.sh" ]; then
    source  "$NVM_DIR/nvm.sh"  # This loads nvm
fi    

# install node v6.5.0 required by serverless
nvm install 6.5.0

# Use this version of node
nvm use 6.5.0

# make version 6.5.0 the default version
nvm alias default node

#Other shells may need node. So add nvm version of node and npm to /usr/local/bin

#copy version of node and npm to /usr/bin
n=$(which node); \
n=${n%/bin/node}; 
sudo ln -s "$n/bin/node" "/usr/bin/node"
sudo ln -s "$n/bin/npm" "/usr/bin/npm"


#install serverless framework
echo "" && echo "Install Serverless npm package ---"
npm install -g serverless@1.27.0

# install deployer command line tool
echo "" && echo "install deployer cli tool"
pushd ${SCRIPTPATH}/../src/deployer && npm install 


# deploy app to lambda
echo "" && echo "Call deployer on the app directory"
if [ -z "${LAMBDA_RUNTIME}"]; then
    # Lambda runtime not specified so do not use the cli option.
    node index.js --path $1 --orders_file $ORDERS_FILE --service $ORDERS_NAME --container_name $CONTAINER_NAME --hq $HEADQUARTERS_REMOTE --account $AWS_ACCOUNT_NUMBER
else
    node index.js --path $1 --runtime $LAMBDA_RUNTIME --orders_file $ORDERS_FILE --service $ORDERS_NAME --container_name $CONTAINER_NAME --hq $HEADQUARTERS_REMOTE --account $AWS_ACCOUNT_NUMBER
fi
